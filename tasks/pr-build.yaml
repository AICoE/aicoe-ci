apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pr-s2i-build
spec:
  params:
    - default: .
      description: The location of the path to run s2i from.
      name: PATH_CONTEXT
    - default: "true"
      description:
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
    - name: LOGLEVEL
      description: Log level when running the S2I binary
      default: "0"
    - name: pr_number
      type: string
    - name: pr_repo
      type: string
  resources:
    inputs:
      - name: s2i-thoth
        type: image
      - name: image-base
        type: image
      - name: pr
        type: pullRequest
      - name: repo
        type: git

  steps:
    - name: oc-create-image
      image: quay.io/openshift/origin-cli:latest
      command: ["/bin/bash"]
      args:
      - -c
      - oc get imagestream $(params.pr_repo) || oc create imagestream $(params.pr_repo) --lookup-local=true

    - name: git-init-op
      resources:
        limits:
          memory: "500Mi"
          cpu: "1"
        requests:
          memory: "500Mi"
          cpu: "1"
      image: $(resources.inputs.s2i-thoth.url)
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      command: ["/bin/bash"]
      args:
      - -c
      - |
        cp -r /workspace/pr/ /workspace/output/
        git fetch origin pull/$(params.pr_number)/head:workbranch
        git checkout workbranch

    - name: generate
      command:
        - /usr/local/bin/s2i
        - --loglevel=$(params.LOGLEVEL)
        - build
        - $(params.PATH_CONTEXT)
        - $(resources.inputs.s2i-thoth.url)
        - --as-dockerfile
        - /gen-source/Dockerfile.gen
      image: quay.io/openshift-pipeline/s2i:nightly
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
      workingDir: /workspace/repo

    - name: build
      command:
        - buildah
        - bud
        - --tls-verify=$(params.TLSVERIFY)
        - --layers
        - -f
        - /gen-source/Dockerfile.gen
        - -t
        - $(params.pr_repo)-$(params.pr_number)
        - .
      image: quay.io/buildah/stable
      securityContext:
        privileged: true
      env:
        - name: "THOTH_ADVISE"
          value: "1"
        - name: "THOTH_ERROR_FALLBACK"
          value: "1"
        - name: "THOTH_HOST"
          value: "khemenu.thoth-station.ninja"
        - name: "THAMOS_VERBOSE"
          value: "1"
        - name: "THAMOS_NO_PROGRESSBAR"
          value: "1"
        - name: "THAMOS_CONFIG_TEMPLATE"
          value: ".thoth.yaml"
        - name: "THAMOS_CONFIG_EXPAND_ENV"
          value: "1"
        - name: "THOTH_DRY_RUN"
          value: "0"
        - name: "THAMOS_DEBUG"
          value: "0"
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source

    - name: push
      command:
        - buildah
        - push
        - --tls-verify=$(params.TLSVERIFY)
        - $(params.pr_repo)-$(params.pr_number)
        - docker://$(resources.inputs.image-base.url)/$(params.pr_repo):$(params.pr_number)
      image: quay.io/buildah/stable
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
  volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
