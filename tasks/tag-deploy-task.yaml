apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tag-deploy
spec:
  params:
    # tag params
    - name: git_ref
      description: Git reference value.
    - name: repo_name
      description: The git repository title.
    - name: BASE_REPO
      description: Base repository on quay.
      default: "thoth-station"
    - name: CONFIG_REPO
      description: Base repository on quay.
      default: "thoth-application"
    - name: IMAGESTREAM_PATH
      type: string
      description: imagestreamtag yaml which is to be updated.
      default: "user-api/overlays/test/imagestreamtag.yaml"

  resources:
    inputs:
      - name: s2i-thoth
        type: image

  steps:
  - name: git-clone-config-repo
    image: $(resources.inputs.s2i-thoth.url)
    securityContext:
      privileged: true
    script: |
      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
      git clone git@github.com:$(params.BASE_REPO)/$(params.CONFIG_REPO) /workspace/configrepo
    volumeMounts:
      - name: ssh-config
        mountPath: /tekton/home/.ssh

  - name: patch-imagetag
    image: mikefarah/yq:3.2.1
    workingdir: /workspace/configrepo
    script: |
      if [ ! -z "$(params.IMAGESTREAM_PATH)" ]; then
        echo "{\"spec\":{\"tags\":[{\"name\":\"latest\",\"from\":{\"kind\":\"DockerImage\",\"name\":\"quay.io/$(params.BASE_REPO)/$(params.repo_name):$(params.git_ref)\"},\"importPolicy\":{},\"referencePolicy\":{\"type\":\"Source\"}}]}}" | yq -P m -i -x $(params.IMAGESTREAM_PATH) -
      fi

  - name: git-push
    image: $(resources.inputs.s2i-thoth.url)
    securityContext:
      privileged: true
    workingdir: /workspace/configrepo
    env:
      - name: GITHUB_USERNAME
        valueFrom:
          secretKeyRef:
            name: auth-secret
            key: user-name
      - name: GITHUB_EMAIL
        valueFrom:
          secretKeyRef:
            name: auth-secret
            key: user-email
    script: |
      git config --local user.email "$GITHUB_EMAIL"
      git config --local user.name "$GITHUB_USERNAME"
      git status
      git add .
      git commit -m "Deploy the Tag $(params.git_ref) for $(params.repo_name)"
      export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
      git push --set-upstream origin master
    volumeMounts:
      - name: ssh-config
        mountPath: /tekton/home/.ssh

  volumes:
    - name: ssh-config
      secret:
        secretName: auth-secret
        items:
          - key: ssh-privatekey
            mode: 0600
            path: id_rsa
