apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gather-and-provide-metrics
spec:
  params:
    - name: runtime_environment_test_name
      description: Runtime environment name present in .thoth.yaml for test.
    - name: route_deployment
      description: Route to the deployment model for test.
    - name: repo_url
      description: repo URL.
  resources:
    inputs:
      - name: pipeline-helpers
        type: image
      - name: s2i-thoth
        type: image
      - name: pr
        type: pullRequest
      - name: repo
        type: git

  steps:
    - name: gather-metrics
      image: $(resources.inputs.pipeline-helpers.url)
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      script: |
        sleep 40
        python3 /opt/app-root/src/gather_metrics.py
      env:
        - name: PIPELINE_HELPERS_METRICS_FILE_PATH
          value: "metrics.json"
        - name: DEPLOYED_MODEL_URL
          value: "$(params.route_deployment)"
        - name: TEST_RUNTIME_ENVIRONMENT_NAME
          value: $(params.runtime_environment_test_name)

    - name: post-process-data
      image: $(resources.inputs.pipeline-helpers.url)
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      env:
        - name: REPO_URL
          value: $(params.repo_url)
        - name: THOTH_S3_ENDPOINT_URL
          valueFrom: 
            configMapKeyRef: 
              name: aicoe-ci-ceph
              key: endpoint
        - name: THOTH_CEPH_BUCKET
          valueFrom: 
            configMapKeyRef: 
              name: aicoe-ci-ceph
              key: bucket
        - name: THOTH_CEPH_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aicoe-ci-ceph
              key: key-id
        - name: THOTH_CEPH_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aicoe-ci-ceph
              key: secret-key
      script: |
        python3 /opt/app-root/src/post_process_metrics.py

    - name: pr-updates
      image: $(resources.inputs.s2i-thoth.url)
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      env:
        - name: GITHUBTOKEN
          valueFrom:
            secretKeyRef:
              name: auth-secret
              key: token
      script: |
        #!/usr/bin/env python3
        import json
        import os
        import http.client

        def post_comment(comment: str):
            with open("/workspace/pr/pr.json") as f:
                pr_info = json.load(f)

            comment_url = "/repos/{}/issues/{}/comments".format(pr_info["Base"]["Repo"]["FullName"], pr_info["Number"])

            data = {
                "body": comment,
            }

            conn = http.client.HTTPSConnection("api.github.com")
            r = conn.request(
                "POST",
                comment_url,
                body=json.dumps(data),
                headers={
                    "User-Agent": "aicoe-ci",
                    "Authorization": "Bearer " + os.environ["GITHUBTOKEN"],
                })

            resp = conn.getresponse()
            if not str(resp.status).startswith("2"):
                print("Error: %d" % (resp.status))
                print(resp.read())

        if os.path.isfile('pr-comment'):
          with open('pr-comment') as comment_data:
              comment = comment_data.read()
              post_comment(comment)
