apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: z-stream-release
spec:
  params:
    # tag params
    - name: git_ref
      description: Git reference value.
    - name: opf_repo_url
      description: operate-first repository url.
    - name: opf_default_branch
      description: operate-first repository default branch.
    - name: opf_repo
      description: operate-first repository.
    - name: opf_org
      description: operate-first organization.

  resources:
    inputs:
      - name: s2i-thoth
        type: image

  steps:
    - name: z-stream-update
      image: quay.io/operate-first/opf-toolbox:v0.3.2
      workingDir: /workspace/
      securityContext:
        privileged: true
      script: |
        export GIT_SSH_COMMAND='ssh -i /tekton/home/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
        git clone $(params.opf_repo_url) /workspace/apps
        cd /workspace/apps
        ./scripts/set-odh-release.sh $(params.git_ref)
      volumeMounts:
        - name: ssh-config
          mountPath: /tekton/home/.ssh

    - name: git-commit
      image: $(resources.inputs.s2i-thoth.url)
      securityContext:
        privileged: true
      workingDir: /workspace/apps
      env:
        - name: GITHUB_USERNAME
          valueFrom:
            secretKeyRef:
              name: auth-secret
              key: user-name
        - name: GITHUB_EMAIL
          valueFrom:
            secretKeyRef:
              name: auth-secret
              key: user-email
      script: |
        git config --local user.email "$GITHUB_EMAIL"
        git config --local user.name "$GITHUB_USERNAME"
        git status
        git checkout -b z-stream-update-$(params.git_ref)
        git add .
        git commit -m ":arrow_up: Upgrade ODH to $(params.git_ref)"
        export GIT_SSH_COMMAND='ssh -i /tekton/home/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
        git push --set-upstream origin z-stream-update-$(params.git_ref)
      volumeMounts:
        - name: ssh-config
          mountPath: /tekton/home/.ssh

    - name: raise-pull-request
      workingDir: /workspace/repo
      env:
        - name: GITHUBTOKEN
          valueFrom:
            secretKeyRef:
              name: auth-secret
              key: token
        - name: ODH_TAG
          value: $(params.git_ref)
        - name: OPF_DEFAULT_BRANCH
          value: $(params.opf_default_branch)
        - name: OPF_ORG
          value: $(params.opf_org)
        - name: OPF_REPO
          value: $(params.opf_repo)
      image: $(resources.inputs.s2i-thoth.url)
      script: |
        #!/usr/libexec/platform-python
        import json
        import os
        import http.client

        status_url = f"/repos/{os.getenv('OPF_ORG')}/{os.getenv('OPF_REPO')}/pulls"
        issue_body = f"Syncing repository with ODH release.\n z-stream release version: {os.getenv('ODH_TAG')}\n"
        head = f"z-stream-update-{os.getenv('ODH_TAG')}"
        base = os.getenv("OPF_DEFAULT_BRANCH","master")
        title = f"Upgrade ODH to {os.getenv('ODH_TAG')}"
        data = {
            "title": title,
            "head": head,
            "base": base,
            "body": issue_body,
        }

        conn = http.client.HTTPSConnection("api.github.com")
        r = conn.request(
            "POST",
            status_url,
            body=json.dumps(data),
            headers={
                "User-Agent": "aicoe-ci",
                "Authorization": "Bearer " + os.environ["GITHUBTOKEN"],
            })
        resp = conn.getresponse()
        if not str(resp.status).startswith("2"):
            print("Error: %d" % (resp.status))
            print(resp.read())
        else:
            print("Successful: %d" % (resp.status))

  volumes:
    - name: ssh-config
      secret:
        secretName: auth-secret
        items:
          - key: ssh-privatekey
            mode: 0600
            path: id_rsa
