apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pr-build-release
spec:
  params:
    # pull request params
    - name: pr_number
      description: Pull Request number.
    - name: pr_repo
      description: Pull Request repository.
    - name: base_image
      description: Base image to be used.
      default: "quay.io/thoth-station/s2i-thoth-ubi8-py36:latest"
    - name: overlay_name
      description: overlay to use during build.
      default: ""
    - name: build_stratergy
      description: stratergy with which image is to build.
      default: ""
    - name: dockerfile_path
      description: dockerfile path to be used for builds.
      default: ""
    - name: build_source_script
      description: Specify a URL for the assemble, assemble-runtime and run scripts
      default: ""
    - name: registry
      description: Container image registry.
      default: "quay.io"
    - name: registry_org
      description: Name of the registry organization.
      default: "thoth-station"
    - name: registry_project
      description: Name of the project repository.
      default: ""
    - name: registry_secret
      description: Registry image push secret.
      default: "thoth-station-thoth-pusher-secret"

    # buildah params
    - name: PATH_CONTEXT
      default: .
      description: The location of the path to run s2i from.
    - name: TLSVERIFY
      default: "false"
      description:
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
    - name: LOGLEVEL
      description: Log level when running the S2I binary
      default: "0"
    - name: BASE_REPO
      description: Base repository on quay.
      default: "thoth-station"
    # s2i thoth params
    - name: ENABLE_PIPENV
      description: Set this variable to use Pipenv.
      default: "1"
    - name: THOTH_ADVISE
      description: Advise the recommended stack by Thoth.
      default: "0"
    - name: THOTH_ERROR_FALLBACK
      description: Fallback to the lock file present in the repository if the submitted Thoth analysis fails.
      default: "1"
    - name: THOTH_DRY_RUN
      description: Submit stack to Thoth, but do not use the recommended one.
      default: "1"
    - name: "THAMOS_DEBUG"
      description: "Thamos enable debug mode."
      default: "0"
    - name: "THAMOS_VERBOSE"
      description: Run thamos in verbose mode.
      default: "1"
    - name: THOTH_PROVENANCE_CHECK
      description: Provenance check is verify the stack.
      default: "0"
    - name: THAMOS_NO_PROGRESSBAR
      description: Disable progressbar for thamos.
      default: "1"
  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
    - name: IMAGE_URL
      description: URL  of the built Image.
  resources:
    inputs:
      - name: s2i-thoth
        type: image
      - name: pr
        type: pullRequest
      - name: repo
        type: git

  steps:
    - name: check-ops
      image: $(resources.inputs.s2i-thoth.url)
      securityContext:
        privileged: true
      script: |
        if [ -z "$(params.registry_project)" ]; then
          registry_repo=$(params.pr_repo)
        else
          registry_repo=$(params.registry_project)
        fi
        if [ "$(params.registry)" == "quay.io" ]; then
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' "https://quay.io/api/v1/repository/$(params.registry_org)/$registry_repo")
          if [ $STATUS -eq 200 ]; then
              exit 0
          else
              exit 1
          fi
        else
           exit 0
        fi

    - name: git-init-op
      image: $(resources.inputs.s2i-thoth.url)
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      script: |
        cp -r /workspace/pr/ /workspace/output/
        git fetch origin pull/$(params.pr_number)/head:workbranch
        git checkout workbranch

    - name: pre-package-extract
      image: $(resources.inputs.s2i-thoth.url)
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      script: |
        mkdir /opt/aicoe-ci
        if [ -f Pipfile ]; then
          cp -r Pipfile /opt/aicoe-ci
        fi
        if [ -f Pipfile.lock ]; then
          cp -r Pipfile.lock /opt/aicoe-ci
        fi

    - name: generate
      image: quay.io/openshift-pipeline/s2i:nightly
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      script: |
        if [ -z "$(params.build_stratergy)" ]; then
          if [ -f Dockerfile ]; then
            cp -rf . /gen-source/
            mv /gen-source/Dockerfile /gen-source/Containerfile
          elif [ -f Containerfile ]; then
            cp -rf . /gen-source/
          else
            /usr/local/bin/s2i build \
            $(params.PATH_CONTEXT) \
            $(params.base_image) \
            --env THAMOS_RUNTIME_ENVIRONMENT=$(params.overlay_name) \
            --env THOTH_ADVISE=$(params.THOTH_ADVISE) \
            --env THOTH_ERROR_FALLBACK=$(params.THOTH_ERROR_FALLBACK) \
            --env THOTH_DRY_RUN=$(params.THOTH_DRY_RUN) \
            --env THAMOS_DEBUG=$(params.THAMOS_DEBUG) \
            --env THAMOS_VERBOSE=$(params.THAMOS_VERBOSE) \
            --env THOTH_PROVENANCE_CHECK=$(params.THOTH_PROVENANCE_CHECK) \
            --loglevel=$(params.LOGLEVEL) \
            --as-dockerfile /gen-source/Containerfile
          fi
        else
          if [ "$(params.build_stratergy)" == "Dockerfile" ]; then
            if [ -z "$(params.dockerfile_path)" ]; then
              cp -rf . /gen-source/
              mv /gen-source/Dockerfile /gen-source/Containerfile
            else
              cp -rf . /gen-source/
              mv /gen-source/"$(params.dockerfile_path)" /gen-source/Containerfile
            fi
          elif [ "$(params.build_stratergy)" == "Containerfile" ]; then
            cp -rf . /gen-source/
          else
            if [ -z "$(params.build_source_script)" ]; then
              /usr/local/bin/s2i build \
              $(params.PATH_CONTEXT) \
              $(params.base_image) \
              --env THAMOS_RUNTIME_ENVIRONMENT=$(params.overlay_name) \
              --env THOTH_ADVISE=$(params.THOTH_ADVISE) \
              --env THOTH_ERROR_FALLBACK=$(params.THOTH_ERROR_FALLBACK) \
              --env THOTH_DRY_RUN=$(params.THOTH_DRY_RUN) \
              --env THAMOS_DEBUG=$(params.THAMOS_DEBUG) \
              --env THAMOS_VERBOSE=$(params.THAMOS_VERBOSE) \
              --env THOTH_PROVENANCE_CHECK=$(params.THOTH_PROVENANCE_CHECK) \
              --env GIT_REPO_NAME=$(params.pr_repo)  \
              --loglevel=$(params.LOGLEVEL) \
              --as-dockerfile /gen-source/Containerfile
            else
              /usr/local/bin/s2i build \
              $(params.PATH_CONTEXT) \
              $(params.base_image) \
              --scripts-url=$(params.build_source_script) \
              --assemble-user=root \
              --assemble-runtime-user=root \
              --loglevel=$(params.LOGLEVEL) \
              --env GIT_REPO_NAME=$(params.pr_repo)  \
              --as-dockerfile /gen-source/Containerfile
            fi
          fi
        fi
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source

    - name: build
      image: quay.io/buildah/stable
      workingDir: /gen-source
      securityContext:
        privileged: true
      resources:
        limits:
          memory: "8Gi"
          cpu: "2"
        requests:
          memory: "2Gi"
          cpu: "2"
      script: |
        buildah bud \
        --storage-driver=overlay \
        --tls-verify=$(params.TLSVERIFY) \
        --layers \
        -f \
        /gen-source/Containerfile \
        -t \
        $(params.pr_repo)-$(params.pr_number) \
        .
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source

    - name: push
      image: quay.io/buildah/stable
      script: |
        if [ -z "$(params.registry_project)" ]; then
          registry_repo=$(params.pr_repo)
        else
          registry_repo=$(params.registry_project)
        fi
        buildah push \
        --authfile=/pushsecret/.dockerconfigjson \
        --tls-verify=$(params.TLSVERIFY) \
        --digestfile /workspace/image-digest \
        $(params.pr_repo)-$(params.pr_number) \
        docker://$(params.registry)/$(params.registry_org)/$registry_repo:pr-$(params.pr_number)
      securityContext:
        privileged: true
      resources:
        limits:
          memory: "8Gi"
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: quay-creds
          mountPath: /pushsecret/
          readOnly: true

    - name: digest-to-results
      image: quay.io/buildah/stable
      script: |
        if [ -z "$(params.registry_project)" ]; then
          registry_repo=$(params.pr_repo)
        else
          registry_repo=$(params.registry_project)
        fi
        cat /workspace/image-digest | tee /tekton/results/IMAGE_DIGEST
        echo $(params.registry)/$(params.registry_org)/$registry_repo:pr-$(params.pr_number) > /tekton/results/IMAGE_URL

  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
    - name: quay-creds
      secret:
        secretName: $(params.registry_secret)
