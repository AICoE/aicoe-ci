apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tag-release
spec:
  params:
    # buildah params
    - name: PATH_CONTEXT
      default: .
      description: The location of the path to run s2i from.
    - name: TLSVERIFY
      default: "false"
      description:
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
    - name: LOGLEVEL
      description: Log level when running the S2I binaryx`x
      default: "0"
    - name: BASE_REPO
      description: Base repository on quay.
      default: "thoth-station"
    # s2i thoth params
    - name: ENABLE_PIPENV
      description: Set this variable to use Pipenv.
      default: '1'
    - name: UPGRADE_PIP_TO_LATEST
      description: Set this variable to have the 'pip' program and related python packages be upgraded.
      default: '1'
    - name: WEB_CONCURRENCY
      description: Set this to change the default setting for the number of workers.
      default: '1'
    - name: THOTH_ADVISE
      description: Advise the recommended stack by Thoth.
      default: "0"
    - name: THOTH_ERROR_FALLBACK
      description: Fallback to the lock file present in the repository if the submitted Thoth analysis fails.
      default: "1"
    - name: THOTH_DRY_RUN
      description: Submit stack to Thoth, but do not use the recommended one.
      default: "0"
    - name: "THAMOS_DEBUG"
      description: "Thamos enable debug mode."
      default: "0"
    - name: "THAMOS_VERBOSE"
      description: Run thamos in verbose mode.
      default: "1"
    - name: THOTH_PROVENANCE_CHECK
      description: Provenance check is verify the stack.
      default: "0"
    - name: THAMOS_NO_PROGRESSBAR
      description: Disable progressbar for thamos.
      default: "1"
    # tag params
    - name: git_ref
      description: Git reference value.
    - name: repo_name
      description: The git repository title.

  resources:
    inputs:
      - name: s2i-thoth
        type: image
      - name: repo
        type: git

  steps:
    - name: git-init-op
      image: $(resources.inputs.s2i-thoth.url)
      workingDir: /workspace/repo
      securityContext:
        privileged: true
      script: |
        git fetch origin --tags
        git checkout tags/$(params.git_ref) -b workbranch

    - name: generate
      command:
        - /usr/local/bin/s2i
        - --loglevel=$(params.LOGLEVEL)
        - build
        - $(params.PATH_CONTEXT)
        - $(resources.inputs.s2i-thoth.url)
        - --as-dockerfile
        - /gen-source/Dockerfile.gen
      image: quay.io/openshift-pipeline/s2i:nightly
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
      workingDir: /workspace/repo

    - name: build
      image: quay.io/buildah/stable
      command:
        - buildah
        - bud
        - --build-arg
        - ENABLE_PIPENV=$(params.ENABLE_PIPENV)
        - --build-arg
        - UPGRADE_PIP_TO_LATEST=$(params.UPGRADE_PIP_TO_LATEST)
        - --build-arg
        - WEB_CONCURRENCY=$(params.WEB_CONCURRENCY)
        - --build-arg
        - THOTH_ADVISE=$(params.THOTH_ADVISE)
        - --build-arg
        - THOTH_ERROR_FALLBACK=$(params.THOTH_ERROR_FALLBACK)
        - --build-arg
        - THOTH_DRY_RUN=$(params.THOTH_DRY_RUN)
        - --build-arg
        - THAMOS_DEBUG=$(params.THAMOS_DEBUG)
        - --build-arg
        - THAMOS_VERBOSE=$(params.THAMOS_VERBOSE)
        - --build-arg
        - THOTH_PROVENANCE_CHECK=$(params.THOTH_PROVENANCE_CHECK)
        - --tls-verify=$(params.TLSVERIFY)
        - --layers
        - -f
        - /gen-source/Dockerfile.gen
        - -t
        - $(params.repo_name)-$(params.git_ref)
        - .
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source

    - name: push
      image: quay.io/buildah/stable
      command:
        - buildah
        - push
        - --authfile=/pushsecret/.dockerconfigjson
        - --tls-verify=$(params.TLSVERIFY)
        - $(params.repo_name)-$(params.git_ref)
        - docker://quay.io/$(params.BASE_REPO)/$(params.repo_name):$(params.git_ref)
      securityContext:
        privileged: true
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: quay-creds
          mountPath: /pushsecret/
          readOnly: true

  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
    - name: quay-creds
      secret:
        secretName: thoth-station-thoth-pusher-secret  # Name of the secret to be parameterized
