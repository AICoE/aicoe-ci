---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tag-release-pipeline
  labels:
    app: aicoe-ci
spec:
  params:
    - name: git_ref
      type: string
    - name: git_ref_type
      type: string
    - name: repo_name
      type: string
    - name: repo_url
      type: string
    - name: uid
      type: string
    - name: pipelinerun_name
      type: string
  resources:
    - name: git-repo
      type: git
    - name: s2i-thoth
      type: image
    - name: ubi
      type: image

  tasks:
    - name: tag-check
      taskRef:
        name: tag-check
      params:
        - name: git_ref_type
          value: $(params.git_ref_type)
        - name: pipelinerun_name
          value: $(params.pipelinerun_name)

    - name: configuration
      taskRef:
        name: configuration
      resources:
        inputs:
          - name: repo
            resource: git-repo
      runAfter:
        - tag-check

    - name: custom-pipeline-run
      taskRef:
        name: custom-pipeline
      conditions:
        - conditionRef: custom-pipeline-check
          resources:
            - name: ubi
              resource: ubi
            - name: repo
              resource: git-repo
      params:
        - name: git_ref
          value: $(params.git_ref)
        - name: git_ref_type
          value: $(params.git_ref_type)
        - name: repo_name
          value: $(params.repo_name)
        - name: repo_url
          value: $(params.repo_url)
        - name: uid
          value: $(params.uid)
      resources:
        inputs:
          - name: s2i-thoth
            resource: s2i-thoth
          - name: repo
            resource: git-repo
      runAfter:
        - tag-check

    - name: tag-publish-pypi-run
      taskRef:
        name: upload-pypi
      conditions:
        - conditionRef: upload-pypi-check
          resources:
            - name: repo
              resource: git-repo
            - name: ubi
              resource: ubi
      params:
        - name: git_ref
          value: $(params.git_ref)
      resources:
        inputs:
          - name: s2i-thoth
            resource: s2i-thoth
          - name: repo
            resource: git-repo
      runAfter:
        - tag-check

    - name: tag-release-run
      taskRef:
        name: tag-release
      params:
        - name: git_ref
          value: $(params.git_ref)
        - name: repo_name
          value: $(params.repo_name)
        - name: base_image
          value: $(tasks.configuration.results.base-image)
        - name: build_stratergy
          value: $(tasks.configuration.results.build-stratergy)
        - name: dockerfile_path
          value: $(tasks.configuration.results.dockerfile-path)
        - name: build_source_script
          value: $(tasks.configuration.results.build-source-script)
        - name: registry
          value: $(tasks.configuration.results.registry)
        - name: registry_org
          value: $(tasks.configuration.results.registry-org)
        - name: registry_project
          value: $(tasks.configuration.results.registry-project)
        - name: registry_secret
          value: $(tasks.configuration.results.registry-secret)
      resources:
        inputs:
          - name: s2i-thoth
            resource: s2i-thoth
          - name: repo
            resource: git-repo
      runAfter:
        - tag-check

    - name: tag-deploy-run
      taskRef:
        name: tag-deploy
      params:
        - name: git_ref
          value: $(params.git_ref)
        - name: repo_name
          value: $(params.repo_name)
        - name: registry
          value: $(tasks.configuration.results.registry)
        - name: registry_org
          value: $(tasks.configuration.results.registry-org)
        - name: registry_project
          value: $(tasks.configuration.results.registry-project)
        - name: deploy_project_org
          value: $(tasks.configuration.results.deploy-project-org)
        - name: deploy_project_name
          value: $(tasks.configuration.results.deploy-project-name)
        - name: deploy_image_name
          value: $(tasks.configuration.results.deploy-image-name)
        - name: overlay_contextpath
          value: $(tasks.configuration.results.overlay-contextpath)
      resources:
        inputs:
          - name: s2i-thoth
            resource: s2i-thoth
      runAfter:
        - tag-release-run
